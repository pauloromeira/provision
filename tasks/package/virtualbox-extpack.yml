---
- name: Virtualbox > Extension Pack > Get version info
  command: VBoxManage --version
  changed_when: false
  register: vbox_info

- name: Virtualbox > Extension Pack > Extract version
  set_fact:
    vbox_version: "{{ vbox_info.stdout_lines | last | split('_') | first }}"

- name: Virtualbox > Extension Pack > Show version
  debug:
    var: vbox_version

- name: Virtualbox > Extension Pack > Download hashes
  uri:
    url: "https://www.virtualbox.org/download/hashes/{{ vbox_version }}/SHA256SUMS"
    return_content: true
  register: vbox_hashes_response

- name: Virtualbox > Extension Pack > Create hashes dict
  set_fact:
    vbox_hashes: "{{ dict(vbox_hashes_response.content | replace('*', '') | split('\n') | select | map('split') | map('reverse')) }}"

- name: Virtualbox > Extension Pack > Set extpack filename
  set_fact:
    vbox_extpack_filename: "Oracle_VM_VirtualBox_Extension_Pack-{{ vbox_version }}.vbox-extpack"

- name: Virtualbox > Extension Pack > Download file
  get_url:
    url: "https://download.virtualbox.org/virtualbox/{{ vbox_version }}/{{ vbox_extpack_filename }}"
    dest: "/tmp/{{ vbox_extpack_filename }}"
    checksum: "sha256:{{ vbox_hashes[vbox_extpack_filename] }}"
  changed_when: false
  register: vbox_extpack

- name: Virtualbox > Extension Pack > Install
  shell: echo "y" | VBoxManage extpack install "{{ vbox_extpack.dest }}"
  register: this
  changed_when: "'Successfully installed' in this.stdout"
  failed_when: "this.rc != 0 and 'already installed' not in this.stderr"

- name: Virtualbox > Extension Pack > Cleanup
  command: VBoxManage extpack cleanup
  changed_when: false


# Install extpack from repositories (OLD)

# - name: Virtualbox > Extension Pack > Accept license
#   debconf:
#     name: virtualbox-ext-pack
#     question: virtualbox-ext-pack/license
#     vtype: select
#     value: 'true'

# # Add USB 2.0 and USB 3.0 support
# - name: Virtualbox > Extension Pack > Install
#   apt:
#     name: virtualbox-ext-pack
#     state: present
