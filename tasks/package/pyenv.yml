---
# References:
#   - https://github.com/pyenv/pyenv-installer
#   - https://github.com/pyenv/pyenv/wiki#suggested-build-environment
#   - https://github.com/pyenv/pyenv#set-up-your-shell-environment-for-pyenv
- name: Pyenv > Install python build dependencies
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - build-essential
    - curl
    - libbz2-dev
    - libffi-dev
    - liblzma-dev
    - libncursesw5-dev
    - libreadline-dev
    - libsqlite3-dev
    - libssl-dev
    - libxml2-dev
    - libxmlsec1-dev
    - llvm
    - make
    - tk-dev
    - wget
    - xz-utils
    - zlib1g-dev

- name: Pyenv > Clone pyenv repository
  become_user: "{{ user_id }}"
  git:
    repo: https://github.com/pyenv/pyenv.git
    dest: "{{ pyenv_dir }}"
    depth: 1

- name: Pyenv > Clone pyenv plugins repositories
  become_user: "{{ user_id }}"
  git:
    repo: "https://github.com/{{ item }}.git"
    dest: "{{ pyenv_dir }}/plugins/{{ item | split('/') | last }}"
    depth: 1
  loop:
    - pyenv/pyenv-doctor
    - pyenv/pyenv-installer
    - pyenv/pyenv-update
    - pyenv/pyenv-virtualenv
    - pyenv/pyenv-which-ext
    - momo-lab/xxenv-latest  # install latest version with `pyenv latest install`

- name: Pyenv > Install Python latest version
  become_user: "{{ user_id }}"
  command: pyenv latest install --skip-existing
  environment:
    PATH: '{{ pyenv_dir }}/bin:{{ ansible_env.PATH }}'
  register: pyenv_latest_install_cmd
  changed_when: "'Install' in pyenv_latest_install_cmd.stderr"

- name: Pyenv > Set Python latest version
  set_fact:
    python_latest: "{{ pyenv_latest_install_cmd.stdout | regex_search(\"Latest version is '(.*)'\", '\\1') | first }}"

- name: Pyenv > Python latest version
  debug:
    var: python_latest
