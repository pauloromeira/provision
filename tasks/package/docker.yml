---
# References:
#   - https://docs.docker.com/engine/install/ubuntu/
#   - https://docs.docker.com/engine/install/fedora/
#   - https://docs.docker.com/engine/install/linux-postinstall/
#   - https://docs.docker.com/compose/install/compose-plugin/#install-using-the-repository
- name: Docker > Uninstall old versions (apt)
  apt:
    name: "{{ item }}"
    state: absent
  loop:
    - docker.io
    - docker-doc
    - docker-compose
    - docker-compose-v2
    - podman-docker
    - containerd
    - runc
  when: ansible_pkg_mgr == "apt"

- name: Docker > Uninstall old versions (dnf)
  dnf:
    name: "{{ item }}"
    state: absent
  loop:
    - docker
    - docker-client
    - docker-client-latest
    - docker-common
    - docker-latest
    - docker-latest-logrotate
    - docker-logrotate
    - docker-selinux
    - docker-engine-selinux
    - docker-engine
  when: ansible_pkg_mgr == "dnf"

- name: Docker > Add apt repository
  import_role:
    name: add_apt_repository
  vars:
    repo_name: docker
    repo_source: "deb https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    key_url: https://download.docker.com/linux/ubuntu/gpg
    armored_key: true
  when: ansible_pkg_mgr == "apt"

- name: Docker > Add yum repository (dnf)
  yum_repository:
    name: docker-ce
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/fedora/$releasever/$basearch/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://download.docker.com/linux/fedora/gpg
  when: ansible_pkg_mgr == "dnf"

- name: Docker > Install Docker Engine
  package:
    name: "{{ item }}"
    state: present
  loop:
    - containerd.io
    - docker-buildx-plugin
    - docker-ce
    - docker-ce-cli
    - docker-compose-plugin

- name: Docker > Ensure docker group exists
  group:
    name: docker
    state: present

- name: Docker > Add user to docker group
  user:
    name: "{{ user_id }}"
    groups: docker
    append: true

- name: Docker > Ensure service started
  service:
    name: docker
    state: started
    enabled: true

- name: Docker Compose > Copy docker-compose compatibility script
  copy:
    src: files/package/docker-compose.sh
    dest: /usr/local/bin/docker-compose
    owner: root
    group: root
    mode: 0755
