---
- name: Dotfiles > Install requirements
  package:
    name: "{{ item }}"
  loop:
    - git
    - stow

- name: Dotfiles > clone and configure repository
  become_user: "{{ user_id }}"
  block:
    - name: Dotfiles > clone repository via https
      git:
        repo: "{{ git_https_url }}/{{ dotfiles_repo }}.git"
        dest: "{{ dotfiles_dir }}"
        update: no
      register: dotfiles_clone

    - name: Dotfiles > set push ssh url
      git_config:
        repo: "{{ dotfiles_dir }}"
        scope: local
        name: remote.origin.pushurl
        value: "{{ git_ssh_url }}/{{ dotfiles_repo }}.git"

- name: Dotfiles > find packages and create symlinks
  become_user: "{{ user_id }}"
  tags: symlinks
  block:
    - name: Dotfiles > find packages
      find:
        paths: "{{ dotfiles_dir }}"
        recurse: no
        file_type: directory
      register: packages

    - name: Dotfiles > stow > create symlinks
      command:
        chdir: "{{ dotfiles_dir }}"
        cmd: stow --no-folding --adopt --verbose=2 "{{ item }}"
      register: this
      changed_when: this.stderr | regex_search('(?m)^LINK')
      with_items: "{{ packages.files | map(attribute='path') | map('basename') }}"

- name: Dotfiles > stash local differences
  become_user: "{{ user_id }}"
  command:
    chdir: "{{ dotfiles_dir }}"
    cmd: git stash push -m "[backup:provision] {{ dotfiles_clone.after }}"
  when: not dotfiles_clone.before  # only after repo was just cloned
  register: this
  changed_when: "'No local changes' not in this.stdout"
